services:
  qubership-nifi-toolkit:
    image: apache/nifi-toolkit:1.28.1
    container_name: qubership-nifi-toolkit
    entrypoint: /bin/sh
    command: >
        -c "if [ ! -f /tmp/tls-certs/nifi/keystore.p12 ];
        then
        mkdir -m 755 -p /tmp/tls-certs/nifi
        && echo 'Generating nifi certs...'
        && /opt/nifi-toolkit/nifi-toolkit-1.28.1/bin/tls-toolkit.sh standalone -n \"localhost\" --subjectAlternativeNames \"nifi\"
        -C \"CN=admin, OU=NIFI\" -P ${TRUSTSTORE_PASSWORD} -S ${KEYSTORE_PASSWORD_NIFI} -o /tmp/tls-certs/nifi
        && echo 'Converting nifi certs to PKCS12...'
        && keytool -importkeystore -srckeystore /tmp/tls-certs/nifi/localhost/keystore.jks
        -srcstorepass ${KEYSTORE_PASSWORD_NIFI} -srcstoretype JKS
        -deststoretype PKCS12 -destkeystore /tmp/tls-certs/nifi/keystore.p12 -deststorepass ${KEYSTORE_PASSWORD_NIFI}
        && keytool -importkeystore -srckeystore /tmp/tls-certs/nifi/localhost/truststore.jks -srcstorepass ${TRUSTSTORE_PASSWORD}
        -srcstoretype JKS -deststoretype PKCS12 -destkeystore /tmp/tls-certs/nifi/truststore.p12
        -deststorepass ${TRUSTSTORE_PASSWORD};
        else return 0;
        fi
        && cp /tmp/tls-certs/nifi/nifi-cert.pem /tmp/tls-certs/nifi-registry
        && cp /tmp/tls-certs/nifi/nifi-key.key /tmp/tls-certs/nifi-registry
        && echo 'Generating nifi-registry certs...'
        && /opt/nifi-toolkit/nifi-toolkit-1.28.1/bin/tls-toolkit.sh standalone -n \"localhost\" --subjectAlternativeNames \"nifi-registry\"
        -C \"CN=admin, OU=NIFI\" -P ${TRUSTSTORE_PASSWORD} -S ${KEYSTORE_PASSWORD_NIFI_REG} -o /tmp/tls-certs/nifi-registry
        && cp /tmp/tls-certs/nifi-registry/localhost/keystore.jks /tmp/tls-certs/nifi-registry/keystore.jks
        && echo 'Converting nifi-registry certs to PKCS12...'
        && keytool -importkeystore -srckeystore /tmp/tls-certs/nifi-registry/keystore.jks -srcstorepass ${KEYSTORE_PASSWORD_NIFI_REG} -srcstoretype JKS
        -deststoretype PKCS12 -destkeystore /tmp/tls-certs/nifi-registry/keystore.p12 -deststorepass ${KEYSTORE_PASSWORD_NIFI_REG}
        && cp /tmp/tls-certs/nifi-registry/localhost/truststore.jks /tmp/tls-certs/truststore.jks
        && keytool -importkeystore -srckeystore /tmp/tls-certs/nifi-registry/truststore.jks -srcstorepass ${TRUSTSTORE_PASSWORD}
        -srcstoretype JKS -deststoretype PKCS12 -destkeystore /tmp/tls-certs/nifi-registry/truststore.p12 -deststorepass ${TRUSTSTORE_PASSWORD}"
    volumes:
      - tls-certificate:/tmp/tls-certs
    environment:
      - KEYSTORE_PASSWORD_NIFI=${KEYSTORE_PASSWORD_NIFI}
      - KEYSTORE_PASSWORD_NIFI_REG=${KEYSTORE_PASSWORD_NIFI_REG}
      - TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD}
  qubership-nifi:
    image: ghcr.io/netcracker/nifi:latest
    container_name: qubership-nifi
    depends_on:
      qubership-nifi-toolkit:
        condition: service_completed_successfully
    ports:
      - "127.0.0.1:8443:8443"
    volumes:
      - nifi-conf:/opt/nifi/nifi-current/persistent_conf
      - tls-certificate-nifi:/tmp/tls-certs
    environment:
      - AUTH=tls
      - NIFI_WEB_HTTPS_PORT=8443
      - NIFI_WEB_HTTP_HOST=0.0.0.0
      - NIFI_WEB_PROXY_HOST=localhost
      - NIFI_SENSITIVE_PROPS_KEY=${NIFI_SENSITIVE_PROPS_KEY}
      - NIFI_NEW_SENSITIVE_KEY=${NIFI_SENSITIVE_PROPS_KEY}
      - KEYSTORE_PATH=/tmp/tls-certs/nifi/keystore.p12
      - KEYSTORE_TYPE=PKCS12
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD_NIFI}
      - TRUSTSTORE_PATH=/tmp/tls-certs/nifi/truststore.p12
      - TRUSTSTORE_TYPE=PKCS12
      - TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD}
      - INITIAL_ADMIN_IDENTITY=CN=admin, OU=NIFI
      - NAMESPACE=local
      - CONSUL_ENABLED=true
      - CONSUL_URL=consul:8500
      - CONSUL_CONFIG_JAVA_OPTIONS=
    restart: unless-stopped
  qubership-nifi-registry:
    image: ghcr.io/netcracker/nifi-registry:latest
    container_name: qubership-nifi-registry
    depends_on:
      qubership-nifi-toolkit:
        condition: service_completed_successfully
    ports:
      - "127.0.0.1:18443:18443"
    volumes:
      - nifi-registry-database:/opt/nifi-registry/nifi-registry-current/database
      - nifi-registry-flow:/opt/nifi-registry/nifi-registry-current/flow_storage
      - tls-certificate-nifi-registry:/tmp/tls-certs
    environment:
      - AUTH=tls
      - NIFI_REGISTRY_WEB_HTTPS_PORT=18443
      - NIFI_REGISTRY_WEB_HTTP_HOST=0.0.0.0
      - KEYSTORE_PATH=/tmp/tls-certs/keystore.p12
      - KEYSTORE_TYPE=PKCS12
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD_NIFI_REG}
      - TRUSTSTORE_PATH=/tmp/tls-certs/truststore.p12
      - TRUSTSTORE_TYPE=PKCS12
      - TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD}
      - INITIAL_ADMIN_IDENTITY=CN=admin, OU=NIFI
    restart: unless-stopped
  consul:
    image: hashicorp/consul:1.20
    ports:
      - 127.0.0.1:18500:8500
    container_name: consul

volumes:
  tls-certificate:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PATH_TO_LOCAL_VOLUME:-.}/tls-certificate/

  tls-certificate-nifi:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PATH_TO_LOCAL_VOLUME:-.}/tls-certificate/nifi

  tls-certificate-nifi-registry:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PATH_TO_LOCAL_VOLUME:-.}/tls-certificate/nifi-registry

  nifi-conf:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PATH_TO_LOCAL_VOLUME:-.}/nifi/conf/

  nifi-registry-database:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PATH_TO_LOCAL_VOLUME:-.}/nifi-registry/database/

  nifi-registry-flow:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PATH_TO_LOCAL_VOLUME:-.}/nifi-registry/flow-storage/