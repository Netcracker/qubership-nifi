---
name: docker-build-and-test

on:
  push:
    paths:
      - '.github/workflows/docker-build-and-test.yml'
      - 'qubership-bundle/**'
      - 'qubership-consul/**'
      - 'qubership-nifi-bulk-redis-service/**'
      - 'qubership-nifi-bundle-common/**'
      - 'qubership-nifi-common/**'
      - 'qubership-nifi-db-bundle/**'
      - 'qubership-nifi-lookup-services/**'
      - 'qubership-services/**'
      - 'pom.xml'
      - 'Dockerfile'
      - 'nifi-config/**'
      - 'nifi-scripts/**'
      - 'qubership-nifi-deps/**'
      - 'scripts/**'
      - '.github/actions/**'
      - '.github/collections/**'
      - '.github/workflows/sh/**'
      - '.github/docker/**'
      - '.github/configuration/**'
  pull_request:
    paths:
      - '.github/workflows/docker-build-and-test.yml'
      - 'qubership-bundle/**'
      - 'qubership-consul/**'
      - 'qubership-nifi-bulk-redis-service/**'
      - 'qubership-nifi-bundle-common/**'
      - 'qubership-nifi-common/**'
      - 'qubership-nifi-db-bundle/**'
      - 'qubership-nifi-lookup-services/**'
      - 'qubership-services/**'
      - 'pom.xml'
      - 'Dockerfile'
      - 'nifi-config/**'
      - 'nifi-scripts/**'
      - 'qubership-nifi-deps/**'
      - 'scripts/**'
      - '.github/actions/**'
      - '.github/collections/**'
      - '.github/workflows/sh/**'
      - '.github/docker/**'
      - '.github/configuration/**'
  workflow_dispatch:
    inputs:
      java-version:
        required: false
        type: string
        default: "21"
        description: 'Java version (e.g., 21)'

permissions:
  contents: read

jobs:
  mvn:
    uses: ./.github/workflows/maven-build-and-test.yml
    with:
      java-version: ${{ github.event.inputs.java-version || '21' }}
      artifact-id: 'qubership-nifi-local-build'
      upload-artifact: true
      skip-sonar: true
  docker-build-and-test:
    strategy:
      fail-fast: false
      matrix:
        run-mode: [ 'tls', 'oidc', 'cluster', 'cluster-statefulset', 'tls-consul-read', 'tls-consul-write', 'upgrade-oidc' ]
    needs: [ mvn ]
    runs-on: ubuntu-latest
    steps:
      - name: Prepare test results
        shell: bash
        run: |
          mkdir -p ./test-results/
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
          persist-credentials: false
      - name: Download artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: 'qubership-nifi-local-build'
      - name: Run local docker build
        run: docker build -t local-nifi:test .
      - name: Run test for consul = ${{ matrix.run-mode }}
        if: ${{ matrix.run-mode == 'tls-consul-read' || matrix.run-mode == 'tls-consul-write' }}
        uses: ./.github/actions/run-error-start-test
        with:
          run-mode: 'tls'
          error-mode: '${{ matrix.run-mode }}'
      - name: Run test for upgrade test = ${{ matrix.run-mode }}
        if: ${{ startsWith(matrix.run-mode, 'upgrade-') }}
        uses: ./.github/actions/run-upgrade-test
        with:
          run-mode: '${{ matrix.run-mode }}'
      - name: Run tests with mode = ${{ matrix.run-mode }}
        if: ${{ matrix.run-mode != 'tls-consul-read' && matrix.run-mode != 'tls-consul-write' && matrix.run-mode != 'upgrade-oidc' }}
        uses: ./.github/actions/run-nifi-tests-generic
        with:
          run-mode: '${{ matrix.run-mode }}'
      - name: Verify test results
        shell: bash
        run: |
          echo "Preparing summary..."
          {
            echo "## Autotests summary"
            echo "Run mode = ${{ matrix.run-mode }}"
            echo ""
            echo "| Step                                           | Result                     |"
            echo "| ---------------------------------------------- | -------------------------- |"
            cat ./test-results/*/summary_*.txt
            echo ""
          } >> $GITHUB_STEP_SUMMARY
          echo "Checking test results for failures..."
          failed_cnt=$(find ./test-results -name "failed_*.lst" | wc -l)
          echo "Found failed steps = $failed_cnt"
          if [ "$failed_cnt" == "0" ]; then
            echo "All tests were successful!"
            echo "All tests were successful!" >> $GITHUB_STEP_SUMMARY
          else
            echo "Some tests ($failed_cnt) failed. Marking as failure."
            echo "Some tests ($failed_cnt) failed. Marking as failure." >> $GITHUB_STEP_SUMMARY
            if [ -f ./docker.env ]; then
              if [ -d "./test-results/${{ matrix.run-mode }}" ]; then
                echo "Copying docker.env to test-results/${{ matrix.run-mode }}..."
                cp ./docker.env "./test-results/${{ matrix.run-mode }}/"
              fi
            fi
            exit 1;
          fi
      - name: Upload test results
        if: failure() || cancelled()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: nifi-autotests-${{ matrix.run-mode }}-logs
          path: |
            ./test-results
          retention-days: 2
