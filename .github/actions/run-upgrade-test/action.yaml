---
name: 'Running NiFi in two versions to test upgrade version'
description: 'Run NiFi version 1.x. Set up a test group process and verify its operation. Upgrade NiFi to version 2.x and re-verify the configuration.'
inputs:
  run-mode:
    description: 'Autotest run mode.'
    required: false
    default: 'oidc'
runs:
  using: "composite"
  steps:
    - name: Prepare env
      shell: bash
      id: prepare-env
      run: |
        echo "Preparing env..."
        . .github/workflows/sh/nifi-lib.sh
        origRunMode="${{ inputs.run-mode }}"
        newRunMode="${origRunMode/upgrade-/}"
        echo "Original run-mode = $origRunMode, modified run mode = $newRunMode"
        setup_env_before_tests "$newRunMode"
        #prepare both new run mode and original run mode, only the latter must be used
        prepare_results_dir "$origRunMode"
        echo "RUN_MODE=$newRunMode" >> $GITHUB_OUTPUT
    - name:  Run local nifi with 1.x version
      shell: bash
      run: |
        export NIFI_SENSITIVE_KEY=$(cat ./nifi-sens-key.tmp)
        echo "Starting containers..."
        export NIFI_IMAGE="ghcr.io/netcracker/qubership-nifi"
        export NIFI_IMAGE_TAG="1.0.6"
        docker compose -f .github/docker/${{ steps.prepare-env.outputs.RUN_MODE }}/docker-compose.yaml --env-file ./docker.env up -d
    - name: Wait for nifi container to start (TLS)
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        NIFI_CLIENT_PASSWORD=$(cat ./temp-vol/tls-cert/nifi/CN=admin_OU=NIFI.password)
        wait_nifi_container "15" "150" "localhost" "8080" "true" ".github/docker/${{ steps.prepare-env.outputs.RUN_MODE }}/docker-compose.yaml" "${{ inputs.run-mode }}" \
          "./temp-vol/tls-cert/nifi/nifi-cert.pem" "./temp-vol/tls-cert/nifi/CN=admin_OU=NIFI.p12" \
          "$NIFI_CLIENT_PASSWORD"
    - name: Run collection for setup policies
      continue-on-error: true
      uses: ./.github/actions/run-newman-tests
      with:
        collection-name: 'Setup_Access_Policies.postman_collection.json'
        env-name: 'NiFi_AT_TLS.json.postman_environment'
        results-dir: '${{ inputs.run-mode }}'
        short-name: 'policies'
        tls-certs-dir: "./temp-vol/tls-cert"
        tls-ca-certs: "nifi/nifi-cert.pem"
        tls-client-certs-config: "newman-tls-config.json"
        docker-compose-file: ".github/docker/${{ steps.prepare-env.outputs.RUN_MODE }}/docker-compose.yaml"
    - name: Run E2E test
      continue-on-error: true
      uses: ./.github/actions/run-newman-tests
      with:
        collection-name: 'NiFi_E2E_API_Tests.postman_collection.json'
        env-name: 'NiFi_AT_TLS.json.postman_environment'
        results-dir: '${{ inputs.run-mode }}'
        short-name: 'e2e'
        tls-certs-dir: "./temp-vol/tls-cert"
        tls-ca-certs: "nifi/nifi-cert.pem"
        tls-client-certs-config: "newman-tls-config.json"
        global-vars-file-name: "Global_Vars.postman_globals.json"
        docker-compose-file: ".github/docker/${{ steps.prepare-env.outputs.RUN_MODE }}/docker-compose.yaml"
    - name: Getting the flow.json.gz version from the archive folder
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        get_flow_json_version ".github/docker/${{ steps.prepare-env.outputs.RUN_MODE }}/docker-compose.yaml"
    - name: Stop local nifi
      shell: bash
      continue-on-error: true
      run: |
        echo "Stop local nifi..."
        docker compose -f .github/docker/${{ steps.prepare-env.outputs.RUN_MODE }}/docker-compose.yaml --env-file ./docker.env rm -f nifi
    - name: Run local nifi 2.x
      shell: bash
      run: |
        export NIFI_SENSITIVE_KEY=$(cat ./nifi-sens-key.tmp)
        echo "Starting containers..."
        docker compose -f .github/docker/${{ steps.prepare-env.outputs.RUN_MODE }}/docker-compose.yaml --env-file ./docker.env up -d
    - name: Wait for nifi container restart (TLS)
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        NIFI_CLIENT_PASSWORD=$(cat ./temp-vol/tls-cert/nifi/CN=admin_OU=NIFI.password)
        wait_nifi_container "15" "150" "localhost" "8080" "true" ".github/docker/${{ steps.prepare-env.outputs.RUN_MODE }}/docker-compose.yaml" "${{ inputs.run-mode }}" \
          "./temp-vol/tls-cert/nifi/nifi-cert.pem" "./temp-vol/tls-cert/nifi/CN=admin_OU=NIFI.p12" \
          "$NIFI_CLIENT_PASSWORD"
    - name: Run E2E upgrade test
      continue-on-error: true
      uses: ./.github/actions/run-newman-tests
      with:
        collection-name: 'NiFi_Upgrade_E2E_Test.postman_collection.json'
        env-name: 'NiFi_AT_TLS.json.postman_environment'
        results-dir: '${{ inputs.run-mode }}'
        short-name: 'upgrade'
        tls-certs-dir: "./temp-vol/tls-cert"
        tls-ca-certs: "nifi/nifi-cert.pem"
        tls-client-certs-config: "newman-tls-config.json"
        global-vars-file-name: "Global_Vars.postman_globals.json"
        docker-compose-file: ".github/docker/${{ steps.prepare-env.outputs.RUN_MODE }}/docker-compose.yaml"
    - name: Set the version in Consul
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        export CONF_VERSION=$(cat ./nifi-conf-version.tmp)
        [ -f ./consul-acl-token.tmp ] && CONSUL_TOKEN=$(cat ./consul-acl-token.tmp)
        set_configuration_version "$CONF_VERSION" "$CONSUL_TOKEN"
    - name: Restart local nifi
      shell: bash
      run: |
        export NIFI_SENSITIVE_KEY=$(cat ./nifi-sens-key.tmp)
        echo "Restarting containers..."
        docker compose -f .github/docker/${{ steps.prepare-env.outputs.RUN_MODE }}/docker-compose.yaml --env-file ./docker.env restart nifi
    - name: Wait for nifi container to start
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        NIFI_CLIENT_PASSWORD=$(cat ./temp-vol/tls-cert/nifi/CN=admin_OU=NIFI.password)
        wait_nifi_container "15" "60" "localhost" "8080" "true" ".github/docker/${{ steps.prepare-env.outputs.RUN_MODE }}/docker-compose.yaml" "${{ inputs.results-dir }}" \
        "./temp-vol/tls-cert/nifi/nifi-cert.pem" "./temp-vol/tls-cert/nifi/CN=admin_OU=NIFI.p12" \
        "$NIFI_CLIENT_PASSWORD"
    - name: Run E2E restore test
      continue-on-error: true
      uses: ./.github/actions/run-newman-tests
      with:
        collection-name: 'NiFi_Upgrade_Restore_Test.postman_collection.json'
        env-name: 'NiFi_AT_TLS.json.postman_environment'
        results-dir: '${{ inputs.run-mode }}'
        short-name: 'upgrade'
        tls-certs-dir: "./temp-vol/tls-cert"
        tls-ca-certs: "nifi/nifi-cert.pem"
        tls-client-certs-config: "newman-tls-config.json"
        global-vars-file-name: "Global_Vars.postman_globals.json"
        docker-compose-file: ".github/docker/${{ steps.prepare-env.outputs.RUN_MODE }}/docker-compose.yaml"
