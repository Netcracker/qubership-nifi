---
name: 'Running NiFi in two versions to test the upgrade'
description: 'Run NiFi version 1.x. Set up a test group process and verify its operation. Upgrade NiFi to version 2.x and re-verify the configuration.'
inputs:
  run-mode:
    description: 'Autotest run mode.'
    required: false
    default: 'upgrade-test'
runs:
  using: "composite"
  steps:
    - name: Prepare env
      shell: bash
      run: |
        echo "Preparing env..."
        . .github/workflows/sh/nifi-lib.sh
        setup_env_before_tests "${{ inputs.error-mode }}"
    - name: Run local nifi
      shell: bash
      run: |
        export NIFI_SENSITIVE_KEY=$(cat ./nifi-sens-key.tmp)
        echo "Starting containers..."
        export NIFI_DOCKER_IMAGE="ghcr.io/netcracker/nifi"
        export NIFI_DOCKER_IMAGE_TAG="1.0.5"
        docker compose -f .github/docker/${{ inputs.run-mode }}/docker-compose.yaml --env-file ./docker.env up -d
    - name: Wait for nifi container to start (plain)
      if: ${{ inputs.run-mode == 'plain' }}
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        wait_nifi_container "15" "60" "localhost" "8080" "false" ".github/docker/${{ inputs.run-mode }}/docker-compose.yaml" "${{ inputs.run-mode }}"
    - name: Run collection for setup policies
      if: ${{ inputs.run-mode != 'plain' }}
      continue-on-error: true
      uses: ./.github/actions/run-newman-tests
      with:
        collection-name: 'Setup_Access_Policies.postman_collection.json'
        env-name: 'NiFi_AT_TLS.json.postman_environment'
        results-dir: '${{ inputs.run-mode }}'
        short-name: 'policies'
        tls-certs-dir: "./temp-vol/tls-cert"
        tls-ca-certs: "nifi/nifi-cert.pem"
        tls-client-certs-config: "newman-tls-config.json"
        docker-compose-file: ".github/docker/${{ inputs.run-mode }}/docker-compose.yaml"
    - name: Run E2E test
      continue-on-error: true
      uses: ./.github/actions/run-newman-tests
      with:
        collection-name: 'NiFi_E2E_API_Tests.postman_collection.json'
        env-name: ${{ inputs.run-mode != 'plain' && 'NiFi_AT_TLS.json.postman_environment' || 'NiFi_AT.json.postman_environment' }}
        results-dir: '${{ inputs.run-mode }}'
        short-name: 'e2e'
        tls-certs-dir: "./temp-vol/tls-cert"
        tls-ca-certs: "nifi/nifi-cert.pem"
        tls-client-certs-config: "newman-tls-config.json"
        global-vars-file-name: "Global_Vars.postman_globals.json"
        docker-compose-file: ".github/docker/${{ inputs.run-mode }}/docker-compose.yaml"
    - name: Stop local nifi
      shell: bash
      continue-on-error: true
      run: |
        echo "Stop local nifi..."
        docker compose -f .github/docker/${{ inputs.run-mode }}/docker-compose.yaml --env-file ./docker.env rm -f nifi
    - name: Change image for local nifi
      shell: bash
      run: |
        echo "Set the image version for nifi..."
        export NIFI_DOCKER_IMAGE="local-nifi"
        export NIFI_DOCKER_IMAGE_TAG="test"
    - name: Run local nifi 2.x
      shell: bash
      run: |
        export NIFI_SENSITIVE_KEY=$(cat ./nifi-sens-key.tmp)
        echo "Starting containers..."
        docker compose -f .github/docker/${{ inputs.run-mode }}/docker-compose.yaml --env-file ./docker.env up -d
    - name: Run E2E upgrade test
      continue-on-error: true
      uses: ./.github/actions/run-newman-tests
      with:
        collection-name: 'NiFi_Upgrade_Test.postman_collection.json'
        env-name: 'NiFi_AT_TLS.json.postman_environment'
        results-dir: '${{ inputs.run-mode }}'
        short-name: 'upgrade'
        tls-certs-dir: "./temp-vol/tls-cert"
        tls-ca-certs: "nifi/nifi-cert.pem"
        tls-client-certs-config: "newman-tls-config.json"
        global-vars-file-name: "Global_Vars.postman_globals.json"
        docker-compose-file: ".github/docker/${{ inputs.run-mode }}/docker-compose.yaml"
