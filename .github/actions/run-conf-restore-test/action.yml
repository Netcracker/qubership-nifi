---
name: 'Run configuration restore tests'
description: 'Run configuration restore tests'
inputs:
  results-dir:
    description: 'Directory to store results'
    required: false
    default: 'plain'
  docker-container-name:
    description: 'Docker container name'
    required: false
    default: ''
  docker-compose-path:
    description: 'Path to docker compose file'
    required: false
    default: ''
  tls-mode:
    description: 'NiFi run Mode'
    required: false
    type: boolean
    default: false
runs:
  using: "composite"
  steps:
    - name: Getting the flow.json.gz version from the archive folder
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        get_flow_json_version "${{ inputs.docker-container-name }}"
    - name: Creating a test process group
      if: ${{ inputs.tls-mode == 'false' }}
      continue-on-error: true
      uses: ./.github/actions/run-newman-tests
      with:
        collection-name: 'NiFi_Check_Config_Restore_Create_PG.postman_collection.json'
        env-name: 'NiFi_AT.json.postman_environment'
        results-dir: '${{ inputs.results-dir }}'
        short-name: 'create_pg'
    - name: Creating a test process group
      if: ${{ inputs.tls-mode == 'true' }}
      continue-on-error: true
      uses: ./.github/actions/run-newman-tests
      with:
        collection-name: 'NiFi_Check_Config_Restore_Create_PG.postman_collection.json'
        env-name: 'NiFi_AT_TLS.json.postman_environment'
        results-dir: '${{ inputs.results-dir }}'
        short-name: 'create_pg'
        tls-certs-dir: "./temp-vol/tls-cert"
        tls-ca-certs: "nifi/nifi-cert.pem"
        tls-client-certs-config: "newman-tls-config.json"
    - name: Set the version in Consul
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        export CONF_VERSION=$(cat ./nifi-conf-version.tmp)
        set_configuration_version '$CONF_VERSION'
    - name: Restart local nifi
      shell: bash
      run: |
        export NIFI_SENSITIVE_KEY=$(cat ./nifi-sens-key.tmp)
        echo "Restarting containers..."
        docker compose restart nifi
    - name: Wait for nifi container to start
      if: ${{ inputs.tls-mode == 'false' }}
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        wait_nifi_container "15" "60" "127.0.0.1" "8080" "false" "${{ inputs.docker-compose-path }}" "${{ inputs.results-dir }}"
    - name: Wait for nifi container to start
      if: ${{ inputs.tls-mode == 'true' }}
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        wait_nifi_container "15" "60" "localhost" "8080" "true" ".github/docker/tls/docker-compose.yaml" "${{ inputs.results-dir }}" \
        "./temp-vol/tls-cert/nifi/nifi-cert.pem" "./temp-vol/tls-cert/nifi/CN=admin_OU=NIFI.p12" \
        "$NIFI_CLIENT_PASSWORD"
    - name: Checking that the version has been restored
      if: ${{ inputs.tls-mode == 'false' }}
      continue-on-error: true
      uses: ./.github/actions/run-newman-tests
      with:
        collection-name: 'NiFi_Check_Config_Restore_Check_PG.postman_collection.json'
        env-name: 'NiFi_AT.json.postman_environment'
        results-dir: '${{ inputs.results-dir }}'
        short-name: 'check_pg'
    - name: Checking that the version has been restored
      if: ${{ inputs.tls-mode == 'true' }}
      continue-on-error: true
      uses: ./.github/actions/run-newman-tests
      with:
        collection-name: 'NiFi_Check_Config_Restore_Check_PG.postman_collection.json'
        env-name: 'NiFi_AT_TLS.json.postman_environment'
        results-dir: '${{ inputs.results-dir }}'
        short-name: 'check_pg'
        tls-certs-dir: "./temp-vol/tls-cert"
        tls-ca-certs: "nifi/nifi-cert.pem"
        tls-client-certs-config: "newman-tls-config.json"