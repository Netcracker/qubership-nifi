---
name: 'Run NiFi with incorrect configuration for consul'
description: 'Run NiFi with incorrect configuration for consul and tests to check for incorrect start'
inputs:
  run-mode:
    description: 'Autotest run mode.'
    required: false
    default: 'tls'
  error-mode:
    description: 'Error mode for start'
    required: false
    default: 'tls-consul-read'
runs:
  using: "composite"
  steps:
    - name: Prepare env
      shell: bash
      run: |
        echo "Preparing env..."
        . .github/workflows/sh/nifi-lib.sh
        setup_env_before_tests "${{ inputs.error-mode }}"
    - name: Run local nifi
      shell: bash
      if: ${{ inputs.error-mode == 'tls-consul-read' }}
      run: |
        . .github/workflows/sh/nifi-lib.sh
        export NIFI_SENSITIVE_KEY=$(cat ./nifi-sens-key.tmp)
        echo "Starting containers..."
        docker compose -f .github/docker/${{ inputs.run-mode }}/docker-compose.yaml --env-file ./docker.env up -d
        echo "Change Consul ACL token for NiFi..."
        docker compose -f .github/docker/${{ inputs.run-mode }}/docker-compose.yaml --env-file ./docker.env rm -f nifi
        regenerate_consul_token
        docker compose -f .github/docker/${{ inputs.run-mode }}/docker-compose.yaml --env-file ./docker.env up -d
    - name: Run local nifi
      shell: bash
      if: ${{ inputs.error-mode == 'tls-consul-write' }}
      run: |
        . .github/workflows/sh/nifi-lib.sh
        export NIFI_SENSITIVE_KEY=$(cat ./nifi-sens-key.tmp)
        echo "Starting containers..."
        docker compose -f .github/docker/${{ inputs.run-mode }}/docker-compose.yaml --env-file ./docker.env up -d
    - name: Wait for nifi container to start (TLS)
      if: ${{ inputs.error-mode == 'tls-consul-write' }}
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        NIFI_CLIENT_PASSWORD=$(cat ./temp-vol/tls-cert/nifi/CN=admin_OU=NIFI.password)
        wait_nifi_container "15" "150" "localhost" "8080" "true" ".github/docker/${{ inputs.run-mode }}/docker-compose.yaml" "${{ inputs.error-mode }}" \
          "./temp-vol/tls-cert/nifi/nifi-cert.pem" "./temp-vol/tls-cert/nifi/CN=admin_OU=NIFI.p12" \
          "$NIFI_CLIENT_PASSWORD"
    - name: Set configuration for nifi
      if: ${{ inputs.error-mode == 'tls-consul-write' }}
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        get_flow_json_version ".github/docker/${{ inputs.run-mode }}/docker-compose.yaml"
        export CONF_VERSION=$(cat ./nifi-conf-version.tmp)
        [ -f ./consul-acl-token.tmp ] && CONSUL_TOKEN=$(cat ./consul-acl-token.tmp)
        set_configuration_version "$CONF_VERSION" "$CONSUL_TOKEN"
    - name: Restart nifi
      if: ${{ inputs.error-mode == 'tls-consul-write' }}
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        export NIFI_SENSITIVE_KEY=$(cat ./nifi-sens-key.tmp)
        set_consul_policy_file "create-read-policy-request.json"
        echo "Restarting nifi and nifi-toolkit containers..."
        docker compose -f .github/docker/${{ inputs.run-mode }}/docker-compose.yaml --env-file ./docker.env rm -f nifi-toolkit
        docker compose -f .github/docker/${{ inputs.run-mode }}/docker-compose.yaml --env-file ./docker.env rm -f nifi
        docker compose -f .github/docker/${{ inputs.run-mode }}/docker-compose.yaml --env-file ./docker.env up -d
    - name: Checking that local-nifi has not started
      shell: bash
      if: ${{ inputs.error-mode == 'tls-consul-read' }}
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        check_container_not_started "ERROR: Consul app java process has terminated prematurely. See logs for details..." "local-nifi" ".github/docker/${{ inputs.run-mode }}/docker-compose.yaml" "${{ inputs.error-mode }}"
    - name: Checking that local-nifi has not started
      shell: bash
      if: ${{ inputs.error-mode == 'tls-consul-write' }}
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        check_container_not_started "Removing the property 'nifi-restore-version' from the consul was not completed." "local-nifi" ".github/docker/${{ inputs.run-mode }}/docker-compose.yaml" "${{ inputs.error-mode }}"
    - name: Cleanup after tests
      shell: bash
      continue-on-error: true
      run: |
        export NIFI_SENSITIVE_KEY=$(cat ./nifi-sens-key.tmp)
        echo "Stopping and removing containers"
        docker compose -f .github/docker/${{ inputs.run-mode }}/docker-compose.yaml --env-file ./docker.env down -v
        sudo rm -rf ./temp-vol/
